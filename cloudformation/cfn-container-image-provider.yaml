AWSTemplateFormatVersion: '2010-09-09'
Description: 'Custom::ContainerImage provider'
Parameters:
  AppVPC:
    Type: String
    Description: The VPC to deploy the provider in
    Default: ""
  Subnets:
    Type: CommaDelimitedList
    Description: Private subnets in the VPC to deploy to
    Default: ""
  SecurityGroupIds:
    Type: CommaDelimitedList
    Description: Security Group ids to be associated with the provider
    Default: ""
  S3BucketPrefix:
    Type: String
    Description: Prefix of the bucket which contains the Lambda source zip
    Default: 'binxio-public'

Conditions:
  DoNotAttachToVpc: !Equals
      - !Ref 'AppVPC'
      - ''
Resources:
  CFNCustomProvider:
    Type: AWS::Lambda::Function
    Properties:
      Description: 'Custom container image provider'
      Code:
        S3Bucket: !Sub '${S3BucketPrefix}-${AWS::Region}'
        S3Key: 'lambdas/cfn-container-image-provider-0.2.4.zip'
      FunctionName: 'cfn-container-image-provider'
      Handler: 'bootstrap'
      MemorySize: 1024
      Timeout: 900
      Role: !GetAtt 'LambdaRole.Arn'
      Runtime: 'provided.al2'
      VpcConfig: !If
        - DoNotAttachToVpc
        - !Ref 'AWS::NoValue'
        - SubnetIds: !Ref 'Subnets'
          SecurityGroupIds: !Ref 'SecurityGroupIds'

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      Policies:
        - PolicyName: PushToElasticContainerRegistry
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:PutImage
                  - ecr:DeleteImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload
                Resource: '*'

        - PolicyName: WriteToLogGroupPermission
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
                Resource: !GetAtt 'CFNCustomProviderLogGroup.Arn'


  CFNCustomProviderLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: '/aws/lambda/cfn-container-image-provider'
      RetentionInDays: 7
